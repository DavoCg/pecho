var jwt = require('jsonwebtoken');
var validator = require('validator');
var md5 = require('MD5');
var queries = require('es-queries');


function auth(client){
    return {
        login: function(credentials, callback){
            if(!credentials.email || !validator.isEmail(credentials.email)) return callback(new Error('Email not valid'));
            if(!credentials.password) return callback(new Error('Provide a password'));

            client.search(queries.owners.getOwnerByEmail(credentials.email)).then(function(resp){
                if(!checkUserExists(resp) || !checkPassword(credentials.password, resp.hits.hits[0]._source.password)){
                    return callback(null, false);
                }
                var token = generateToken(resp.hits.hits[0]._source);
                return callback(null, {token: token});
            }, callback);
        },
        logout: function(callback){
            callback(null, true);
        }
    }
}


function generateToken(user){
    var secret = 'seCretString97NotTobeHere@';
    var options = {
        expiresInSeconds: 1800,
        ignoreExpiration: true
    };
    return jwt.sign({ user: user }, secret, options);
}

function checkPassword(password, dbPassword){
    return dbPassword === md5(password);
}

function checkUserExists(resp){
    return resp.hits.hits.length > 0;
}

module.exports = auth;